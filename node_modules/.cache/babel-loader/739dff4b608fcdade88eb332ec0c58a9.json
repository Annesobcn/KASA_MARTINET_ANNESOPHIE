{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annes\\\\7150606-React-intermediaire\\\\src\\\\pages\\\\Survey\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport colors from '../../utils/style/colors'; //import { Loader } from '../../utils/style/Atoms'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = SurveyContainer;\nconst QuestionTitle = styled.h2`\n  text-decoration: underline;\n  text-decoration-color: ${colors.primary};\n`;\n_c2 = QuestionTitle;\nconst QuestionContent = styled.span`\n  margin: 30px;\n`;\n_c3 = QuestionContent;\nconst LinkWrapper = styled.div`\n  padding-top: 30px;\n  & a {\n    color: black;\n  }\n  & a:first-of-type {\n    margin-right: 20px;\n  }\n`;\n_c4 = LinkWrapper;\n\nfunction Survey() {\n  _s();\n\n  const {\n    questionNumber\n  } = useParams();\n  const questionNumberInt = parseInt(questionNumber);\n  const prevQuestionNumber = questionNumberInt === 1 ? 1 : questionNumberInt - 1;\n  const nextQuestionNumber = questionNumberInt + 1;\n  const [surveyData, setSurveyData] = useState({});\n  const [isDataLoading, setDataLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    async function fetchSurvey() {\n      setDataLoading(true);\n\n      try {\n        const response = await fetch(`http://localhost:8000/survey`);\n        const {\n          surveyData\n        } = await response.json();\n        setSurveyData(surveyData);\n      } catch (err) {\n        console.log(err);\n        setError(true);\n      } finally {\n        setDataLoading(false);\n      }\n    }\n\n    fetchSurvey();\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Oups il y a eu un probl\\xE8me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(SurveyContainer, {\n    children: [/*#__PURE__*/_jsxDEV(QuestionTitle, {\n      children: [\"Question \", questionNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), isDataLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(QuestionContent, {\n      children: surveyData[questionNumber]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LinkWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/survey/${prevQuestionNumber}`,\n        children: \"Pr\\xE9c\\xE9dent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), surveyData[questionNumberInt + 1] ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/survey/${nextQuestionNumber}`,\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/results\",\n        children: \"R\\xE9sultats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Survey, \"N8p15hy4I1Cx9Gt1yyXmOrKZy1g=\", false, function () {\n  return [useParams];\n});\n\n_c5 = Survey;\nexport default Survey;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SurveyContainer\");\n$RefreshReg$(_c2, \"QuestionTitle\");\n$RefreshReg$(_c3, \"QuestionContent\");\n$RefreshReg$(_c4, \"LinkWrapper\");\n$RefreshReg$(_c5, \"Survey\");","map":{"version":3,"sources":["C:/Users/annes/7150606-React-intermediaire/src/pages/Survey/index.jsx"],"names":["useState","useEffect","useParams","Link","styled","colors","SurveyContainer","div","QuestionTitle","h2","primary","QuestionContent","span","LinkWrapper","Survey","questionNumber","questionNumberInt","parseInt","prevQuestionNumber","nextQuestionNumber","surveyData","setSurveyData","isDataLoading","setDataLoading","error","setError","fetchSurvey","response","fetch","json","err","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport colors from '../../utils/style/colors'\r\n//import { Loader } from '../../utils/style/Atoms'\r\n\r\nconst SurveyContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst QuestionTitle = styled.h2`\r\n  text-decoration: underline;\r\n  text-decoration-color: ${colors.primary};\r\n`\r\n\r\nconst QuestionContent = styled.span`\r\n  margin: 30px;\r\n`\r\n\r\nconst LinkWrapper = styled.div`\r\n  padding-top: 30px;\r\n  & a {\r\n    color: black;\r\n  }\r\n  & a:first-of-type {\r\n    margin-right: 20px;\r\n  }\r\n`\r\n\r\nfunction Survey() {\r\n  const { questionNumber } = useParams()\r\n  const questionNumberInt = parseInt(questionNumber)\r\n  const prevQuestionNumber = questionNumberInt === 1 ? 1 : questionNumberInt - 1\r\n  const nextQuestionNumber = questionNumberInt + 1\r\n  const [surveyData, setSurveyData] = useState({})\r\n  const [isDataLoading, setDataLoading] = useState(false)\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function fetchSurvey() {\r\n      setDataLoading(true)\r\n      try {\r\n        const response = await fetch(`http://localhost:8000/survey`)\r\n        const { surveyData } = await response.json()\r\n        setSurveyData(surveyData)\r\n      } catch (err) {\r\n        console.log(err)\r\n        setError(true)\r\n      } finally {\r\n        setDataLoading(false)\r\n      }\r\n    }\r\n    fetchSurvey()\r\n  }, [])\r\n\r\n  if (error) {\r\n    return <span>Oups il y a eu un problème</span>\r\n  }\r\n\r\n  return (\r\n    <SurveyContainer>\r\n      <QuestionTitle>Question {questionNumber}</QuestionTitle>\r\n      {isDataLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <QuestionContent>{surveyData[questionNumber]}</QuestionContent>\r\n      )}\r\n      <LinkWrapper>\r\n        <Link to={`/survey/${prevQuestionNumber}`}>Précédent</Link>\r\n        {surveyData[questionNumberInt + 1] ? (\r\n          <Link to={`/survey/${nextQuestionNumber}`}>Suivant</Link>\r\n        ) : (\r\n          <Link to=\"/results\">Résultats</Link>\r\n        )}\r\n      </LinkWrapper>\r\n    </SurveyContainer>\r\n  )\r\n}\r\n\r\nexport default Survey\r\n"]},"metadata":{},"sourceType":"module"}