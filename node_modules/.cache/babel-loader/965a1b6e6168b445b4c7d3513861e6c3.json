{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annes\\\\7150606-React-intermediaire\\\\src\\\\pages\\\\Survey\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport colors from '../../utils/style/colors';\nimport { Loader } from '../../utils/style/Atoms';\nimport { SurveyContext } from '../../utils/context';\nimport { useFetch, useTheme } from '../../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = SurveyContainer;\nconst QuestionTitle = styled.h2`\n  text-decoration: underline;\n  text-decoration-color: ${colors.primary};\n`;\n_c2 = QuestionTitle;\nconst QuestionContent = styled.span`\n  margin: 30px;\n`;\n_c3 = QuestionContent;\nconst LinkWrapper = styled.div`\n  padding-top: 30px;\n  & a {\n    color: black;\n  }\n  & a:first-of-type {\n    margin-right: 20px;\n  }\n`;\n_c4 = LinkWrapper;\nconst ReplyBox = styled.button`\n  border: none;\n  height: 100px;\n  width: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${colors.backgroundLight};\n  border-radius: 30px;\n  cursor: pointer;\n  box-shadow: ${props => props.isSelected ? `0px 0px 0px 2px ${colors.primary} inset` : 'none'};\n  &:first-child {\n    margin-right: 15px;\n  }\n  &:last-of-type {\n    margin-left: 15px;\n  }\n`;\n_c5 = ReplyBox;\nconst ReplyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n_c6 = ReplyWrapper;\n\nfunction Survey() {\n  _s();\n\n  const {\n    questionNumber\n  } = useParams();\n  const questionNumberInt = parseInt(questionNumber);\n  const prevQuestionNumber = questionNumberInt === 1 ? 1 : questionNumberInt - 1;\n  const nextQuestionNumber = questionNumberInt + 1;\n  const {\n    theme\n  } = useTheme();\n  const {\n    saveAnswers,\n    answers\n  } = useContext(SurveyContext);\n\n  function saveReply(answer) {\n    saveAnswers({\n      [questionNumber]: answer\n    });\n  }\n\n  const {\n    data,\n    isLoading,\n    error\n  } = useFetch(`http://localhost:8000/survey`);\n  const surveyData = data === null || data === void 0 ? void 0 : data.surveyData;\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Oups il y a eu un probl\\xE8me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(SurveyContainer, {\n    children: [/*#__PURE__*/_jsxDEV(QuestionTitle, {\n      theme: theme,\n      children: [\"Question \", questionNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(QuestionContent, {\n      theme: theme,\n      children: surveyData[questionNumber]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReplyWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ReplyBox, {\n        onClick: () => saveReply(true),\n        isSelected: answers[questionNumber] === true,\n        theme: theme,\n        children: \"Oui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReplyBox, {\n        onClick: () => saveReply(false),\n        isSelected: answers[questionNumber] === false,\n        theme: theme,\n        children: \"Non\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinkWrapper, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/survey/${prevQuestionNumber}`,\n        children: \"Pr\\xE9c\\xE9dent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), surveyData && surveyData[questionNumberInt + 1] ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/survey/${nextQuestionNumber}`,\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/results\",\n        children: \"R\\xE9sultats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Survey, \"3z7TiarH/3QQhknrLnS6nmePL5M=\", false, function () {\n  return [useParams, useTheme, useFetch];\n});\n\n_c7 = Survey;\nexport default Survey;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"SurveyContainer\");\n$RefreshReg$(_c2, \"QuestionTitle\");\n$RefreshReg$(_c3, \"QuestionContent\");\n$RefreshReg$(_c4, \"LinkWrapper\");\n$RefreshReg$(_c5, \"ReplyBox\");\n$RefreshReg$(_c6, \"ReplyWrapper\");\n$RefreshReg$(_c7, \"Survey\");","map":{"version":3,"sources":["C:/Users/annes/7150606-React-intermediaire/src/pages/Survey/index.jsx"],"names":["useState","useEffect","useContext","useParams","Link","styled","colors","Loader","SurveyContext","useFetch","useTheme","SurveyContainer","div","QuestionTitle","h2","primary","QuestionContent","span","LinkWrapper","ReplyBox","button","backgroundLight","props","isSelected","ReplyWrapper","Survey","questionNumber","questionNumberInt","parseInt","prevQuestionNumber","nextQuestionNumber","theme","saveAnswers","answers","saveReply","answer","data","isLoading","error","surveyData"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport colors from '../../utils/style/colors'\r\nimport { Loader } from '../../utils/style/Atoms'\r\nimport { SurveyContext } from '../../utils/context'\r\nimport { useFetch, useTheme } from '../../utils/hooks'\r\n\r\nconst SurveyContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst QuestionTitle = styled.h2`\r\n  text-decoration: underline;\r\n  text-decoration-color: ${colors.primary};\r\n`\r\n\r\nconst QuestionContent = styled.span`\r\n  margin: 30px;\r\n`\r\n\r\nconst LinkWrapper = styled.div`\r\n  padding-top: 30px;\r\n  & a {\r\n    color: black;\r\n  }\r\n  & a:first-of-type {\r\n    margin-right: 20px;\r\n  }\r\n`\r\n\r\nconst ReplyBox = styled.button`\r\n  border: none;\r\n  height: 100px;\r\n  width: 300px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${colors.backgroundLight};\r\n  border-radius: 30px;\r\n  cursor: pointer;\r\n  box-shadow: ${(props) =>\r\n    props.isSelected ? `0px 0px 0px 2px ${colors.primary} inset` : 'none'};\r\n  &:first-child {\r\n    margin-right: 15px;\r\n  }\r\n  &:last-of-type {\r\n    margin-left: 15px;\r\n  }\r\n`\r\n\r\nconst ReplyWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nfunction Survey() {\r\n  const { questionNumber } = useParams()\r\n  const questionNumberInt = parseInt(questionNumber)\r\n  const prevQuestionNumber = questionNumberInt === 1 ? 1 : questionNumberInt - 1\r\n  const nextQuestionNumber = questionNumberInt + 1\r\n  const { theme } = useTheme()\r\n\r\n  const { saveAnswers, answers } = useContext(SurveyContext)\r\n\r\n  function saveReply(answer) {\r\n    saveAnswers({ [questionNumber]: answer })\r\n  }\r\n  const { data, isLoading, error } = useFetch(`http://localhost:8000/survey`)\r\n  const surveyData = data?.surveyData\r\n\r\n  if (error) {\r\n    return <span>Oups il y a eu un problème</span>\r\n  }\r\n\r\n  return (\r\n    <SurveyContainer>\r\n      <QuestionTitle theme={theme}>Question {questionNumber}</QuestionTitle>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <QuestionContent theme={theme}>\r\n          {surveyData[questionNumber]}\r\n        </QuestionContent>\r\n      )}\r\n      <ReplyWrapper>\r\n        <ReplyBox\r\n          onClick={() => saveReply(true)}\r\n          isSelected={answers[questionNumber] === true}\r\n          theme={theme}\r\n        >\r\n          Oui\r\n        </ReplyBox>\r\n        <ReplyBox\r\n          onClick={() => saveReply(false)}\r\n          isSelected={answers[questionNumber] === false}\r\n          theme={theme}\r\n        >\r\n          Non\r\n        </ReplyBox>\r\n      </ReplyWrapper>\r\n      <LinkWrapper theme={theme}>\r\n        <Link to={`/survey/${prevQuestionNumber}`}>Précédent</Link>\r\n        {surveyData && surveyData[questionNumberInt + 1] ? (\r\n          <Link to={`/survey/${nextQuestionNumber}`}>Suivant</Link>\r\n        ) : (\r\n          <Link to=\"/results\">Résultats</Link>\r\n        )}\r\n      </LinkWrapper>\r\n    </SurveyContainer>\r\n  )\r\n}\r\n\r\nexport default Survey\r\n"]},"metadata":{},"sourceType":"module"}